#!/usr/bin/env python3

import numpy as np
import xarray as xr
import pandas as pd
import sys


def _save_library(library, out_csv_file, out_fasta_file, out_txt_file) -> None:

    library.to_csv(out_csv_file, index=False)

    # Get the FASTA headers

    headers = (
        library["name"] +
        " (" +
        library["sublibrary"]
        + ")"
    ).values

    # Get the sequences

    sequences = (
        library["five_const"] +
        library["five_padding"] +
        library["design"] +
        library["three_padding"] +
        library["barcode"] +
        library["three_const"]
    ).values

    # Save to FASTA

    with open(out_fasta_file, "w") as f:
        for i in range(len(sequences)):
            f.write(">" + headers[i] + "\n")
            f.write(sequences[i] + "\n")

    # Save to txt

    with open(out_txt_file, "w") as f:
        for i in range(len(sequences)):
            f.write(sequences[i] + "\n")


#
# Input and output files
#


IN = sys.argv[1]
OUT = sys.argv[2]

library_file = f"{IN}/library.csv"
library_reads_file = f"{IN}/reads/library_t.nc"

barcodes_file = f"{IN}/barcodes.txt"
barcodes_reads_file = f"{IN}/reads/barcodes_t.nc"

out_csv_file = f"{OUT}.csv"
out_fasta_file = f"{OUT}.fasta"
out_txt_file = f"{OUT}.txt"


#
# Loading
#


library = pd.read_csv(library_file, keep_default_na=False)

# Get the predicted reads for the library constructs
# We take the mean of the 2A3 and DMS reads

n = len(library)
library_reads = np.zeros(n, dtype=float)
library_reads_arr = xr.load_dataset(library_reads_file)['reads'].values.mean(1)

m = library_reads_arr.shape[0]
library_reads[:m] = library_reads_arr

# Load the barcodes

barcodes = []
with open(barcodes_file, "r") as f:
    for line in f:
        barcodes.append(line.strip())

# Get the predicted reads for the barcodes
# We take the mean of the 2A3 and DMS reads

n = len(barcodes)
barcodes_reads = np.zeros(n, dtype=float)
barcodes_reads_arr = xr.load_dataset(barcodes_reads_file)['reads'].values.mean(1)
m = barcodes_reads_arr.shape[0]
barcodes_reads[:m] = barcodes_reads_arr

#
# Sorting
#

ix_library = np.argsort(library_reads)
library = library.iloc[ix_library]

# Reverse sort the barcodes by the predicted reads

ix_barcodes = np.flip(np.argsort(barcodes_reads))
_barcodes = [barcodes[jx] for jx in ix_barcodes]
barcodes = _barcodes


#
# Merging
#


# Insert the barcodes into the library

library["barcode"] = barcodes
library["design_reads"] = library_reads[ix_library]
library["barcode_reads"] = [barcodes_reads[jx] for jx in ix_barcodes]
library["total_reads"] = library["design_reads"] + library["barcode_reads"]

# Sort the merged library by total reads in descending order

library = library.sort_values(by="total_reads", ascending=True)


#
# Saving
#


_save_library(library, out_csv_file, out_fasta_file, out_txt_file)
